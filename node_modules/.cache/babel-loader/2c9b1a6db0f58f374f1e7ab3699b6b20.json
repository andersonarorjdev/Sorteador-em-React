{"ast":null,"code":"var _jsxFileName = \"/home/andersonarorj/www/github/Sorteador-em-React/src/Components/Sorteador/Sorteador.jsx\";\nimport React, { useState } from 'react';\nimport { Caixa, Numeros, Corpo } from '../../styles/styles';\nimport Fundo from '../../images/fundo.jpg';\nimport '../../styles/styles';\nexport default (props => {\n  //Logica para o sorteio\n  const NumeroAlatorio = _ => {\n    let numero = Math.floor(Math.random() * (60 - 1) + 1);\n    return numero;\n  };\n\n  const Sorteio = quantidade => {\n    let sorteados = [];\n\n    for (let i = 1; i <= quantidade; i++) {\n      let numero = NumeroAlatorio();\n      sorteados.push(numero);\n    }\n\n    return sorteados;\n  };\n\n  const NumerosIniciais = Array(props.quantidade || 6).fill(0);\n  const [dados, setDados] = useState(NumerosIniciais);\n  const [valor, setValor] = useState(NumerosIniciais);\n  const quantia = valor === 0 ? 6 : valor; //Limpa os campos para gerar um novo sorteio\n\n  const Reseta = _ => {\n    setValor(NumerosIniciais);\n    setDados(NumerosIniciais);\n  };\n\n  const VerificaSorteio = _ => {\n    if (valor == NumerosIniciais) {\n      let MensagemInserevalor = \"Primeiro Insira os dados!\";\n      setDados(() => {\n        MensagemInserevalor;\n      });\n    } else {\n      Reseta();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Caixa, {\n    fonte: 20,\n    wallpaper: Fundo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Corpo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    value: valor,\n    onChange: e => {\n      setValor(+e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Numeros, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, dados.join('  ')), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setDados(Sorteio(quantia));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, \"Sortear\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      VerificaSorteio();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, \"Novo Sorteio\")));\n});","map":{"version":3,"sources":["/home/andersonarorj/www/github/Sorteador-em-React/src/Components/Sorteador/Sorteador.jsx"],"names":["React","useState","Caixa","Numeros","Corpo","Fundo","props","NumeroAlatorio","_","numero","Math","floor","random","Sorteio","quantidade","sorteados","i","push","NumerosIniciais","Array","fill","dados","setDados","valor","setValor","quantia","Reseta","VerificaSorteio","MensagemInserevalor","e","target","value","join"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,KAAT,EAAgBC,OAAhB,EAAyBC,KAAzB,QAAsC,qBAAtC;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAO,qBAAP;AAEA,gBAAeC,KAAK,IAAG;AAEnB;AACA,QAAMC,cAAc,GAAGC,CAAC,IAAG;AACvB,QAAIC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiB,KAAK,CAAtB,IAAyB,CAApC,CAAb;AACA,WAAOH,MAAP;AACH,GAHD;;AAIA,QAAMI,OAAO,GAAGC,UAAU,IAAG;AACzB,QAAIC,SAAS,GAAG,EAAhB;;AAEA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,IAAIF,UAApB,EAAgCE,CAAC,EAAjC,EAAoC;AAChC,UAAIP,MAAM,GAAGF,cAAc,EAA3B;AACAQ,MAAAA,SAAS,CAACE,IAAV,CAAeR,MAAf;AACH;;AACD,WAAOM,SAAP;AACH,GARD;;AAUA,QAAMG,eAAe,GAAGC,KAAK,CAACb,KAAK,CAACQ,UAAN,IAAoB,CAArB,CAAL,CAA6BM,IAA7B,CAAkC,CAAlC,CAAxB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAACiB,eAAD,CAAlC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBvB,QAAQ,CAACiB,eAAD,CAAlC;AACA,QAAMO,OAAO,GAAGF,KAAK,KAAK,CAAV,GAAe,CAAf,GAAmBA,KAAnC,CApBmB,CAsBnB;;AACA,QAAMG,MAAM,GAAGlB,CAAC,IAAI;AAChBgB,IAAAA,QAAQ,CAACN,eAAD,CAAR;AACAI,IAAAA,QAAQ,CAACJ,eAAD,CAAR;AACH,GAHD;;AAKA,QAAMS,eAAe,GAAGnB,CAAC,IAAG;AACxB,QAAGe,KAAK,IAAIL,eAAZ,EAA4B;AACxB,UAAIU,mBAAmB,GAAG,2BAA1B;AACAN,MAAAA,QAAQ,CAAC,MAAM;AAACM,QAAAA,mBAAmB;AAAC,OAA5B,CAAR;AACH,KAHD,MAII;AACAF,MAAAA,MAAM;AACT;AACJ,GARD;;AAUA,sBACI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE,EAAd;AAAkB,IAAA,SAAS,EAAErB,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAEkB,KAA5B;AAAmC,IAAA,QAAQ,EAAEM,CAAC,IAAI;AAACL,MAAAA,QAAQ,CAAC,CAACK,CAAC,CAACC,MAAF,CAASC,KAAX,CAAR;AAA2B,KAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKV,KAAK,CAACW,IAAN,CAAW,IAAX,CADL,CAFJ,eAKI;AAAQ,IAAA,OAAO,EAAE,MAAM;AAACV,MAAAA,QAAQ,CAACT,OAAO,CAACY,OAAD,CAAR,CAAR;AAA2B,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALJ,eAOI;AAAQ,IAAA,OAAO,EAAE,MAAM;AAACE,MAAAA,eAAe;AAAG,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPJ,CADJ,CADJ;AAaH,CAnDD","sourcesContent":["import React, {useState} from 'react';\nimport { Caixa, Numeros, Corpo } from '../../styles/styles';\nimport Fundo from '../../images/fundo.jpg'\nimport '../../styles/styles';\n\nexport default props =>{\n\n    //Logica para o sorteio\n    const NumeroAlatorio = _ =>{\n        let numero = Math.floor(Math.random() * (60 - 1)+1);\n        return numero;\n    };\n    const Sorteio = quantidade =>{\n        let sorteados = [];\n    \n        for(let i = 1; i <= quantidade; i++){\n            let numero = NumeroAlatorio();\n            sorteados.push(numero);\n        }\n        return sorteados;\n    } \n\n    const NumerosIniciais = Array(props.quantidade || 6).fill(0);\n    const [dados, setDados] = useState(NumerosIniciais);\n    const [valor, setValor] = useState(NumerosIniciais);\n    const quantia = valor === 0 ?  6 : valor;\n\n    //Limpa os campos para gerar um novo sorteio\n    const Reseta = _ => {\n        setValor(NumerosIniciais);\n        setDados(NumerosIniciais);\n    }\n\n    const VerificaSorteio = _ =>{\n        if(valor == NumerosIniciais){\n            let MensagemInserevalor = \"Primeiro Insira os dados!\";\n            setDados(() => {MensagemInserevalor})\n        }\n        else{\n            Reseta();\n        }\n    }\n\n    return(\n        <Caixa fonte={20} wallpaper={Fundo}> \n            <Corpo>\n                <input type=\"number\" value={valor} onChange={e => {setValor(+e.target.value);}} />\n                <Numeros>\n                    {dados.join('  ')}\n                </Numeros>\n                <button onClick={() => {setDados(Sorteio(quantia))}}>Sortear</button>\n                {/* <button onClick={() => {Reseta()}}>Novo Sorteio</button> */}\n                <button onClick={() => {VerificaSorteio()}}>Novo Sorteio</button>\n            </Corpo>\n        </Caixa>\n    );\n}"]},"metadata":{},"sourceType":"module"}